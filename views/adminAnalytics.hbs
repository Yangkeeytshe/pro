<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Admin Analytics</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, sans-serif;
      background: linear-gradient(120deg, #f3f4f6, #e0f7fa);
      color: #1f2937;
      display: flex;
      min-height: 100vh;
    }

    .top-nav {
      position: fixed;
      top: 0;
      right: 30px;
      height: 60px;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      gap: 20px;
      padding-right: 20px;
      z-index: 1000;
      background: transparent;
    }

    .nav-right {
      display: flex;
      gap: 20px;
    }

    .nav-right a:hover {
      color: #2563eb;
      transform: scale(1.1);
    }

    .hamburger-btn {
      display: none;
      position: fixed;
      top: 10px;
      left: 10px;
      z-index: 1100;
      background: #2563eb;
      color: white;
      border: none;
      padding: 10px 12px;
      font-size: 20px;
      border-radius: 8px;
      cursor: pointer;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .admin-layout {
      display: flex;
      width: 100%;
    }

    aside {
      width: 250px;
      background-color: #ffffff;
      padding: 2.5rem 2rem;
      box-shadow: 2px 0 16px rgba(0, 0, 0, 0.05);
      margin-top: 60px;
    }

    aside h2 {
      font-size: 22px;
      font-weight: 800;
      margin-bottom: 2.5rem;
      color: #111827;
    }

    aside ul {
      list-style: none;
      padding: 0;
    }

    aside ul li {
      margin-bottom: 1.25rem;
    }

    aside ul li a {
      font-size: 15px;
      text-decoration: none;
      color: #374151;
      transition: all 0.2s ease;
    }

    aside ul li a:hover {
      color: #2563eb;
      transform: translateX(4px);
    }

    aside ul li:last-child a {
      color: #dc2626;
    }

    .cart-wrapper {
      flex-grow: 1;
      padding: 50px;
      display: flex;
      justify-content: center;
      align-items: flex-start;
    }

    .cart-left {
      background-color: #ffffff;
      padding: 40px;
      border-radius: 18px;
      box-shadow: 0 10px 32px rgba(0, 0, 0, 0.05);
      width: 100%;
      max-width: 1100px;
    }

    h2 {
      font-size: 32px;
      font-weight: 800;
      margin-bottom: 40px;
      text-align: center;
      color: #1e3a8a;
    }

    .stat-boxes {
      display: flex;
      gap: 20px;
      margin-bottom: 40px;
      flex-wrap: wrap;
    }

    .stat {
      flex: 1;
      background: #f0f9ff;
      padding: 24px;
      border-radius: 12px;
      box-shadow: 0 6px 20px rgba(0,0,0,0.05);
      text-align: center;
      transition: 0.3s;
    }

    .stat:hover {
      transform: scale(1.02);
    }

    .stat h3 {
      font-size: 28px;
      margin: 0;
      color: #1e40af;
    }

    .stat p {
      font-size: 14px;
      color: #475569;
      margin-top: 4px;
    }

    h3 {
      margin-top: 50px;
      font-size: 22px;
      font-weight: 700;
      color: #1e293b;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      border-radius: 12px;
      overflow: hidden;
      background-color: #ffffff;
      box-shadow: 0 2px 16px rgba(0,0,0,0.04);
    }

    th, td {
      padding: 14px 16px;
      text-align: left;
      font-size: 15px;
    }

    th {
      background-color: #e2e8f0;
      color: #1e293b;
    }

    td {
      border-bottom: 1px solid #f1f5f9;
    }

    .badge {
      padding: 4px 10px;
      font-size: 12px;
      font-weight: 600;
      border-radius: 20px;
      display: inline-block;
      color: white;
    }

    .badge.excellent { background-color: #10b981; }
    .badge.balanced { background-color: #3b82f6; }
    .badge.low { background-color: #f59e0b; }

    canvas {
      margin-top: 40px;
      background: #ffffff;
      border-radius: 12px;
      padding: 20px;
      max-width: 100%;
      height: auto !important;
    }

    .download-btn {
      margin-top: 30px;
      background-color: #111827;
      color: #ffffff;
      padding: 14px;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      width: 100%;
      transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .download-btn:hover {
      background-color: #2563eb;
      transform: translateY(-2px);
    }

    /* Responsive Mobile Styles */
    @media (max-width: 767px) {
      aside {
        position: fixed;
        top: 0;
        left: -260px;
        width: 200px;
        height: 100vh;
        background-color: #ffffff;
        box-shadow: 2px 0 16px rgba(0, 0, 0, 0.1);
        z-index: 1050;
        transition: left 0.3s ease;
        margin-top: 0;
        padding-top: 70px;
      }

      aside.open {
        left: 0;
      }

      .hamburger-btn {
        display: block;
      }

      .admin-layout {
        flex-direction: column;
      }

      .cart-wrapper {
        padding: 1rem;
      }

      h2, h3, .stat h3 {
        font-size: 20px;
      }

      .stat p {
        font-size: 13px;
      }

      table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
        font-size: 13px;
      }
    }
  </style>
</head>

<body>
  <!-- Hamburger Button -->
  <button id="hamburgerToggle" class="hamburger-btn">
    <i class="fas fa-bars"></i>
  </button>

  <!-- Top Nav -->
  <nav class="top-nav">
    <div class="nav-right">
      <a href="/admin/adminDashboard" title="Home"><i class="fas fa-house"></i></a>
      <a href="/logout" title="Logout"><i class="fas fa-right-from-bracket"></i></a>
      <a href="/admin/adminSetting" title="Settings"><i class="fas fa-gear"></i></a>
    </div>
  </nav>

  <div class="admin-layout">
    <aside>
      <h2>Admin Panel</h2>
      <ul>
        <li><a href="/admin/adminDashboard">Dashboard</a></li>
        <li><a href="/admin/adminManageUser">Manage Users</a></li>
        <li><a href="/admin/adminManageProduct">Products</a></li>
        <li><a href="/admin/adminAnalytics">Analytics</a></li>
        <li><a href="/admin/adminSalesAnalytics">Sales Analytics</a></li>
        <li><a href="/logout">Logout</a></li>
      </ul>
    </aside>

    <main class="cart-wrapper">
      <div class="cart-left">
        <h2>Analytics Dashboard</h2>

        <div class="stat-boxes">
          <div class="stat"><h3 id="userCount">0</h3><p>Total Users</p></div>
          <div class="stat"><h3 id="productCount">0</h3><p>Total Products</p></div>
          <div class="stat"><h3 id="newsletterCount">0</h3><p>Newsletter Subscribers</p></div>
        </div>

        <canvas id="productPieChart"></canvas>
        <canvas id="userLineChart" height="120"></canvas>

        <h3>Top Rated Products</h3>
        <table>
          <thead>
            <tr>
              <th>Name</th><th>Price (Nu)</th><th>Rating</th><th>Predicted Score</th>
            </tr>
          </thead>
          <tbody>
            {{#each topProducts}}
              <tr>
                <td>{{this.name}}</td>
                <td>{{this.price}}</td>
                <td>{{this.rating}}</td>
                <td class="score-cell" data-price="{{this.price}}" data-rating="{{this.rating}}">Calculating...</td>
              </tr>
            {{/each}}
          </tbody>
        </table>

        <button class="download-btn" onclick="downloadReport()">Download Report</button>
      </div>
    </main>
  </div>

  <script>
    const animateCount = (id, end) => {
      let start = 0;
      const duration = 1000;
      const stepTime = Math.abs(Math.floor(duration / end));
      const obj = document.getElementById(id);
      const timer = setInterval(() => {
        start++;
        obj.textContent = start;
        if (start == end) clearInterval(timer);
      }, stepTime);
    };

    animateCount("userCount", {{userTotal}});
    animateCount("productCount", {{productTotal}});
    animateCount("newsletterCount", {{newsletterTotal}});

    new Chart(document.getElementById("productPieChart").getContext("2d"), {
      type: "pie",
      data: {
        labels: [{{#each topProducts}}"{{this.name}}"{{#unless @last}},{{/unless}}{{/each}}],
        datasets: [{
          data: [{{#each topProducts}}{{this.rating}}{{#unless @last}},{{/unless}}{{/each}}],
          backgroundColor: ["#60a5fa", "#10b981", "#f59e0b", "#ef4444", "#a78bfa", "#f472b6"],
        }]
      },
      options: {
        plugins: {
          title: { display: true, text: "Product Ratings Breakdown" },
          legend: { position: "bottom" }
        }
      }
    });

    new Chart(document.getElementById("userLineChart").getContext("2d"), {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
        datasets: [{
          label: "User Growth",
          data: [12, 19, 25, 32, 45, {{userTotal}}],
          fill: true,
          tension: 0.4,
          borderColor: "#2563eb",
          backgroundColor: "rgba(37, 99, 235, 0.1)",
          pointRadius: 5
        }]
      },
      options: { responsive: true, scales: { y: { beginAtZero: true } } }
    });

    document.querySelectorAll('.score-cell').forEach(cell => {
      const price = parseFloat(cell.dataset.price);
      const rating = parseFloat(cell.dataset.rating);
      let label = "", className = "";
      if (rating >= 4.5 && price <= 200) {
        label = "üî• Excellent"; className = "excellent";
      } else if (rating >= 3.5) {
        label = "‚öñÔ∏è Balanced"; className = "balanced";
      } else {
        label = "üí§ Low Impact"; className = "low";
      }
      cell.innerHTML = `<span class="badge ${className}">${label}</span>`;
    });

    function downloadReport() {
      const rows = [["Name", "Price (Nu)", "Rating"]];
      document.querySelectorAll("table tbody tr").forEach(tr => {
        const cells = tr.querySelectorAll("td");
        if (cells.length >= 3) {
          rows.push([cells[0].innerText, cells[1].innerText, cells[2].innerText]);
        }
      });
      const csvContent = rows.map(e => e.join(",")).join("\n");
      const blob = new Blob([csvContent], { type: "text/csv" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "top-rated-products.csv";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }

    const hamburgerBtn = document.getElementById("hamburgerToggle");
    const sidebar = document.querySelector("aside");

    hamburgerBtn.addEventListener("click", () => {
      sidebar.classList.toggle("open");
    });

    document.addEventListener("click", (e) => {
      if (sidebar.classList.contains("open") &&
          !sidebar.contains(e.target) &&
          !hamburgerBtn.contains(e.target)) {
        sidebar.classList.remove("open");
      }
    });
  </script>
</body>
</html>
